Method 01: Three Great Candidates

class Solution {
    long maxProduct(int[] arr, int n) {
        // code here
        if(n>=3){
        Arrays.sort(arr);
        return (long)Math.max((long)arr[n-1]*arr[n-2]*arr[n-3],(long)arr[n-1]*arr[0]*arr[1]);
        }
        return 0;
    }
}


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Method 02: 

class Solution {
    long maxProduct(int[] arr, int n) {
        // code here
        long num1=Integer.MIN_VALUE, num2=Integer.MIN_VALUE, num3=Integer.MIN_VALUE;
        long n1=Integer.MAX_VALUE, n2=Integer.MAX_VALUE, n3=Integer.MAX_VALUE;
        for(int i=0;i<n;i++){
            if(num1<=arr[i]){
                num3=num2;
                num2=num1;
                num1=arr[i];
            }
            else if (num1>arr[i] && num2<=arr[i]){
                num3=num2;
                num2=arr[i];
            }
            else if(num3<=arr[i]){
                num3=arr[i];
            }
            
            
            if(n1>=arr[i]){
                n3=n2;
                n2=n1;
                n1=arr[i];
            }
            else if(n1<arr[i] && n2>=arr[i]){
                n3=n2;
                n2=arr[i];
            }
            else if(n3<=arr[i]){
                n3=arr[i];
            }
        }
        return (long)Math.max(num1*num2*num3, num1*n1*n2);
    }
}
